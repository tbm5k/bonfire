name: build and push docker image

on: 
  push:
    branches: 
      - main
  workflow_dispatch:

jobs: 
  buildImage: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      #authenticate against gh container registry
      # - name: Login to ghcr
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ghcr.io
      #     username: ${{github.actor}}
      #     password: ${{secrets.GHCR_PAT}}

      # set up gcloud cli
      - name: setting up gloud cli
        uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      - run: |-
          gcloud --quiet auth configure-docker
      - name: Setting up docker buildx
        uses: docker/setup-buildx-action@v1
        id: buildx

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          # tags: ghcr.io/tbm5k/bonfire-frontend:latest
          tags: gcr.io/${{secrets.GCP_PROJECT_ID}}/bonfire-frontend:v2
      
      # Get the GKE credentials so we can deploy to the cluster
      # - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      #   with:
      #     cluster_name: ${{ secrets.CLUSTER_NAME }}
      #     location: ${{ secrets.GKE_LOCATION }}
      #     credentials: ${{ secrets.GKE_CREDENTIALS }}

      # - name: set default zone and region
      #   run: |
      #     gcloud config set compute/zone europe-west4-a
      #     gcloud config set compute/region europe-west4

      # - name: install kubectl 
      #   run: gcloud components install kubectl
      
      # - name: Get authentication credentials for the cluster
      #   run: gcloud container clusters get-credentials ${{secrets.CLUSTER_NAME}}

      # - name: create a deployment
      #   run: kubectl create deployment test --image=gcr.io/${{secrets.GCP_PROJECT_ID}}/bonfire-frontend:latest

      # - name: expose deployment
      #   run: kubectl expose deployment test --type LoadBalancer --port 80 --target-port 3000